[Cities]
    #The Cities for which to run the analysis
    cities = '''
        Taucha
        Schkeuditz
        Köthen
    '''

    # Placeholder for the cities.
    swap = '''
        Freiberg, Sachsen
        Berlin
        München
        Frankfurt
        Dresden
        Münster
        Chemnitz
        Braunschweig
        Magdeburg
        Oldenburg
        Heidelberg
        Göttingen
        Bamberg
        Nordhorn
        Meckenheim
        Wettringen
    '''
    #TODO rather than using which_result let the user specify a relation id
    which_results = '''
        0
        0
        0
    '''

[Scenarios]
    # Scenarios definitions
    # Standard is "Small", "Medium", "Large" and "Optimal"
    # other Scenarios can be added.
    # each Scenario can have categories of Speeds as well as single override values
    # i.e. [[[Details]]] living_street would translate to highway = "living_street"
    [[Small]]
    name = Small
    short = S1

        [[[Speeds]]]
        # in km/h
        intercity = 0
        local = 0
        bicycle = 0
        sidewalk = 5
        [[[Details]]]
        living_street = 5

    [[Medium]]
    name = Medium
    short = M1

        [[[Speeds]]]
        # in km/h
        intercity = 0
        local = 20
        bicycle = 15
        sidewalk = 5
        [[[Details]]]
        living_street = 5

    [[Medium-restricted]]
    name = Medium-restricted
    short = M2

        [[[Speeds]]]
        # in km/h
        intercity = 0
        local = 0
        bicycle = 15
        sidewalk = 5
        [[[Details]]]
        living_street = 5

    [[Large]]
    name = Large
    short = L1

        [[[Speeds]]]
        # in km/h
        intercity = 40
        local = 20
        bicycle = 0
        sidewalk = 0
        [[[Details]]]
        living_street = 5

    [[Optimal]]
    name = Optimal
    short = O1
    
        [[[Speeds]]]
        # in km/h
        intercity = 40
        local = 20
        bicycle = 15
        sidewalk = 5
        [[[Details]]]
        living_street = 5

[Tags]
    [[NotNo]]
    # List of commonly used tags that are inclusive
        notno = '''
            yes
            left
            right
            both
            sperate
            shared
            lane
            sidepath
            footway
            share_busway
        '''

    [[UsefulTagsWay]]
    # osmtags to download
    # It will add all used tags in the filters i.e. cyclestreet
    # and the once listed below
        usefultagsway = '''
            bride
            tunnel
            oneway
            lanes
            ref
            name
            highway
            maxspeed
            service
            access
            area
            landuse
            width
            est_width
            junction
            surface
            smoothness
            lanes:width
            lanes:surface
            lanes:smoothness
        '''

    # Following are the categories used to calculate the usage and speeds.
    # the categories consist of key = value pairs
    # each of which will be translated to osm tags.

    [[Intercity]]
        highway = '''
            primary
            secondary
        '''
    [[Local]]
        highway = '''
            tertiary
            living_street
            residential
            service
            unclassified
        '''
    [[Bicycle]]
        highway ='''
            cycleway
            path
            service
            track
        '''
        cycleway = '''
            lane
            track
            opposite
            shared_lane
            asl
            opposite_lane
            seperate
            share_busway
            sidepath
            right
            left
            both
            sidewalk
            segregated
            both
            opposite_track
            cyclestreet
        '''
        bicycle = '''
            yes
            designated
            use_sidepath
            permissive
            official
        '''
        cyclestreet ='''
            yes
        '''
        extra_tags ='''
            cycleway:right
            cycleway:left
            cycleway:both
        '''
    [[Sidewalk]]
        highway = '''
            pedestrian
            footway
            path
            living_street
        '''
        path = '''
            sidewalk
            sidepath
        '''
        footway ='''
            sidewalk
            crossing
        '''
        sidewalk ='''
            yes
            right
            left
            both
            seperate
            both
            shared
        '''
        foot = '''
            yes
            designated
            permissive
        '''
        extra_tags ='''
            sidewalk:right
            sidewalk:left
            sidewalk:both
        '''
    [[Overrides]]
        [[[Living_street]]]
            highway ='''
                living_street
            '''
[Parameter]
    # Traveltimes to use for the "Isochrone" in seconds
    # 1min, 5min, 10min, 20min, 30min, 1h
    traveltimes='''
        60
        300
        600
        1200
        1800
        3600
        360000
    '''
    override = False
    simplify = True

[Folders]
    out = out
    plots = plots

[Plot]
    colors = '''
        Red
        Green
        Aqua
        Black
        Blue
    '''
    # build in mathplot markers
    markers ='''
        1
        p
        *
        h
        +
        ^
        x
        X
        d
        |
    '''

    #Use extra Latex Math Symbols 
    extra_markers='''
        vee
        ominus
        circ
        diamond
        clubsuit
        spadesuit
        boxplus
    '''

[Parallel]
    # Standard Parameter for the parallel processing of shortest paths.

    # Setting cores to 0 will use all available.
    # Careful with Setting it to more than you have this will most likely crash.
    cores = 8

    # Amount of shortest paths calculated per call.

    # chunk_size gives the amount of sources calculated per call
      # If set to 0 will adjust so that it will fit into memory
    # chunk_size_max gives a max amount that chunk_size cannot exceed
      # given the nature of the algorithm of calculating all pairs shortest paths
      # the amount of memory needed grows n^2 so be careful with setting this to high
      # igraph will crash silently when running out of memory
      # (shouldn't set this higher than 30k)
    chunk_size = 0
    chunk_size_max = 10000

    # Calculating in parallel needs more RAM
    # max_mem is the maximum percentage of (free) RAM the Program is allowed to use.
    # (It will try it's best to stay under it and will adjust chunk_size_max accordingly)
    # (However if timed unlucky can use slightly more than that.)
    # range(0..1)
    max_mem = 0.5
